{"version":3,"file":"portfolio/view.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzD,MAAMC,gBAAgB,GAAGF,QAAQ,CAACG,aAAa,CAAC,gCAAgC,CAAC,CAAC,CAAC;EACnF,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,gBAAgB,CAAC,+BAA+B,CAAC;EAC1E,MAAMC,KAAK,GAAGN,QAAQ,CAACK,gBAAgB,CAAC,yBAAyB,CAAC;EAClE,MAAME,WAAW,GAAGP,QAAQ,CAACQ,aAAa,CAAC,QAAQ,CAAC;EAEpDD,WAAW,CAACE,WAAW,GAAG,YAAY;EACtCF,WAAW,CAACG,SAAS,GAAG,mBAAmB;;EAE3C;EACA,IAAIN,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;IACvBP,OAAO,CAACA,OAAO,CAACO,MAAM,GAAG,CAAC,CAAC,CAACC,UAAU,CAACC,WAAW,CAACN,WAAW,CAAC;EAChE,CAAC,MAAM;IACNL,gBAAgB,CAACW,WAAW,CAACN,WAAW,CAAC,CAAC,CAAC;EAC5C;EAEA,IAAIO,YAAY,GAAG,EAAE;EAErBV,OAAO,CAACW,OAAO,CAACC,MAAM,IAAI;IACzBA,MAAM,CAACf,gBAAgB,CAAC,OAAO,EAAE,YAAY;MAC5C,MAAMgB,KAAK,GAAGC,QAAQ,CAAC,IAAI,CAACC,YAAY,CAAC,aAAa,CAAC,CAAC;MACxD,MAAMC,KAAK,GAAGN,YAAY,CAACO,OAAO,CAACJ,KAAK,CAAC;MACzC,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAE;QACfN,YAAY,CAACQ,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAACG,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;MAChC,CAAC,MAAM;QACNV,YAAY,CAACW,IAAI,CAACR,KAAK,CAAC,CAAC,CAAC;QAC1B,IAAI,CAACM,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;MAC7B;MACAC,WAAW,CAAC,CAAC;IACd,CAAC,CAAC;EACH,CAAC,CAAC;EAEFpB,WAAW,CAACN,gBAAgB,CAAC,OAAO,EAAE,YAAY;IACjDa,YAAY,GAAG,EAAE,CAAC,CAAC;IACnBV,OAAO,CAACW,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACO,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC5DlB,KAAK,CAACS,OAAO,CAACa,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;EAC/C,CAAC,CAAC;EAEF,SAASH,WAAWA,CAAA,EAAG;IACtB,IAAIb,YAAY,CAACH,MAAM,GAAG,CAAC,EAAE;MAC5BL,KAAK,CAACS,OAAO,CAACa,IAAI,IAAI;QACrB,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAACT,YAAY,CAAC,cAAc,CAAC,CAAC;QAC1D,MAAMe,OAAO,GAAGH,IAAI,CAACI,IAAI,CAACC,GAAG,IAAItB,YAAY,CAACuB,QAAQ,CAACD,GAAG,CAAC,CAAC;QAC5DR,IAAI,CAACC,KAAK,CAACC,OAAO,GAAGI,OAAO,GAAG,EAAE,GAAG,MAAM;MAC3C,CAAC,CAAC;IACH,CAAC,MAAM;MACN5B,KAAK,CAACS,OAAO,CAACa,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;IAC/C;EACD;AACD,CAAC,CAAC,C","sources":["webpack://portfolio-tag-filter/./src/portfolio/view.js"],"sourcesContent":["/**\n * Use this file for JavaScript code that you want to run in the front-end\n * on posts/pages that contain this block.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\n */\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\tconst buttonsContainer = document.querySelector('.pawsome-portfolio-tag-buttons'); // Adjust if your tags have a specific container\n\tconst buttons = document.querySelectorAll('.pawsome-portfolio-tag-button');\n\tconst items = document.querySelectorAll('.pawsome-portfolio-item');\n\tconst clearButton = document.createElement('button');\n\n\tclearButton.textContent = 'Clear Tags';\n\tclearButton.className = 'clear-tags-button';\n\n\t// Append the clear button after the last tag button\n\tif (buttons.length > 0) {\n\t\tbuttons[buttons.length - 1].parentNode.appendChild(clearButton);\n\t} else {\n\t\tbuttonsContainer.appendChild(clearButton); // Fallback if no buttons exist\n\t}\n\n\tlet selectedTags = [];\n\n\tbuttons.forEach(button => {\n\t\tbutton.addEventListener('click', function () {\n\t\t\tconst tagId = parseInt(this.getAttribute('data-tag-id'));\n\t\t\tconst index = selectedTags.indexOf(tagId);\n\t\t\tif (index > -1) {\n\t\t\t\tselectedTags.splice(index, 1); // Remove tag from array\n\t\t\t\tthis.classList.remove('active');\n\t\t\t} else {\n\t\t\t\tselectedTags.push(tagId); // Add tag to array\n\t\t\t\tthis.classList.add('active');\n\t\t\t}\n\t\t\tfilterPosts();\n\t\t});\n\t});\n\n\tclearButton.addEventListener('click', function () {\n\t\tselectedTags = []; // Clear all selected tags\n\t\tbuttons.forEach(button => button.classList.remove('active'));\n\t\titems.forEach(item => item.style.display = '');\n\t});\n\n\tfunction filterPosts() {\n\t\tif (selectedTags.length > 0) {\n\t\t\titems.forEach(item => {\n\t\t\t\tconst tags = JSON.parse(item.getAttribute('data-tag-ids'));\n\t\t\t\tconst isMatch = tags.some(tag => selectedTags.includes(tag));\n\t\t\t\titem.style.display = isMatch ? '' : 'none';\n\t\t\t});\n\t\t} else {\n\t\t\titems.forEach(item => item.style.display = '');\n\t\t}\n\t}\n});\n"],"names":["document","addEventListener","buttonsContainer","querySelector","buttons","querySelectorAll","items","clearButton","createElement","textContent","className","length","parentNode","appendChild","selectedTags","forEach","button","tagId","parseInt","getAttribute","index","indexOf","splice","classList","remove","push","add","filterPosts","item","style","display","tags","JSON","parse","isMatch","some","tag","includes"],"sourceRoot":""}